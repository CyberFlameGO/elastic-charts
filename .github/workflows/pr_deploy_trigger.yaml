# Triggers a deployment task for each new pr
name: PR Deploy Trigger

env:
  NODE_VERSION: '16.13.2' # should match version in .nvmrc

# Precautionary with using pull_request_target
permissions:
  # statuses: none
  # actions: read # needed for /environments
  # checks: none
  # pull-requests: none
  # contents: none
  deployments: write
  # issues: none
  # packages: none
  # repository-projects: none
  # security-events: none

on:
  # Needed to allow forks to access secrets in ci with limited scope
  # This is why we limit 3rd party contributors running actions
  # See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#pull_request_target
  pull_request_target:
    branches:
      # - master
      # - alpha
      - next
      # - '[0-9]+.[0-9]+.[0-9]+'
      # - '[0-9]+.[0-9]+.x'
      # - '[0-9]+.x'

jobs:
  testing:
    name: Testing deployment event
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT_NAME: "PR #${{ github.event.pull_request.number }}"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - run: ls
      - name: Print context
        shell: python
        run: |
          print("""${{ toJSON(github) }}""")
      - name: Print event
        shell: python
        run: |
          print("""${{ toJSON(github.event) }}""")
      - name: Print event
        shell: python
        run: |
          print("""${{ toJSON(github.event) }}""")
      - run: echo "refs/pull/${{ github.event.pull_request.number }}/head"


      - name: Create new PR environment
        uses: octokit/request-action@v2.x
        with:
          # https://docs.github.com/en/rest/reference/deployments#create-or-update-an-environment
          route: PUT /repos/{repo}/environments/{environment_name}
          repo: ${{ github.repository }}
          environment_name: ${{ env.ENVIRONMENT_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN_GH }}
      - name: Create new PR deployment
        uses: octokit/request-action@v2.x
        id: deployment
        with:
          # https://docs.github.com/en/rest/reference/deployments#create-a-deployment
          route: POST /repos/{repo}/deployments
          repo: ${{ github.repository }}
          ref: ${{ github.sha }}
          auto_merge: false # use branch as is without merging with base
          required_contexts: '[]'
          environment: ${{ env.ENVIRONMENT_NAME }}
          transient_environment: true # destroys env after pr is closed
          production_environment: false
          payload: |
            {
              "repo": "${{ github.repository }}",
              "head_repo": "${{ github.event.pull_request.head.repo.full_name }}",
              "head_ref": "${{ github.event.pull_request.head.ref }}",
              "head_sha": "${{ github.event.pull_request.head.sha }}",
              "pr_head_ref": "refs/pull/${{ github.event.pull_request.number }}/head",
              "pr_merge_ref": "refs/pull/${{ github.event.pull_request.number }}/merge",
              "pr_number": "${{ github.event.pull_request.number }}"
            }
        env:
          # Cannot use GITHUB_TOKEN here or won't trigger deploy action
          # See https://github.com/octokit/request-action/issues/12
          GITHUB_TOKEN: ${{ secrets.GH_DEPLOYMENT_TOKEN }}
      - name: Print outputs
        if: ${{ always() }}
        shell: python
        run: |
          print("""${{ toJSON(steps.deployment.outputs) }}""")
      - name: Update Deployment status to queued
        if: ${{ success() }}
        uses: octokit/request-action@v2.x
        with:
          # https://docs.github.com/en/rest/reference/deployments#create-a-deployment-status
          route: POST /repos/{repo}/deployments/{deployment_id}/statuses
          repo: ${{ github.repository }}
          deployment_id: ${{ steps.deployment.outputs.data.id }}
          state: "queued"
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN_GH }}
