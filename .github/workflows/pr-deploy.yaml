# Checks related only to PRs and not code
name: PR Deploy

# concurrency:
#   # TODO: make this stop if running miltiple for one pr
#   group: '${{ github.workflow }} - ${{ github.head_ref }}'
#   cancel-in-progress: true

env:
  NODE_VERSION: '16.13.2' # should match version in .nvmrc

on:
  deployment

jobs:
  testing:
    name: "Deploying ${{ github.event.deployment.environment }}"
    runs-on: ubuntu-latest
    environment:
      name: "${{ github.event.deployment.environment }}"
    steps:
      - name: Print context - Testing 2
        shell: python
        run: |
          print("""${{ toJSON(github) }}""")
      - name: Print event
        shell: python
        run: |
          print("""${{ toJSON(github.event) }}""")
      - name: Print payload
        shell: python
        run: |
          print("""${{ toJSON(github.event) }}""")
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.deployment.payload.repo }}
          ref: ${{ github.event.deployment.payload.pr_head_ref }}
      - run: ls

      #################################################################

      - name: Deploy build to firebase
        id: deploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          expires: 14d # this updates for every deploy
          entryPoint: 'e2e-server'
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          # See https://console.cloud.google.com/iam-admin/iam?project=ech-e2e-ci
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_ECH_E2E_CI }}'
          projectId: ech-e2e-ci
          channelId: 'pr1568'
      - name: Outputs
        shell: python
        run: |
          print("""${{ toJSON(steps.deploy.outputs) }}""")
      - name: Update Deployment status
        if: ${{ success() }}
        uses: octokit/request-action@v2.x
        with:
          # https://docs.github.com/en/rest/reference/deployments#create-a-deployment-status
          route: POST /repos/{repo}/deployments/{deployment_id}/statuses
          repo: ${{ github.repository }}
          deployment_id: ${{ github.event.deployment.id }}
          state: "success"
          # "log_url": "", # should link to github action run automatically
          # should link to firebase channel url
          environment_url: ${{ steps.deploy.outputs.details_url }}
          # environment_url: "https://ech-e2e-ci--pr1568-czfjtdq5.web.app"
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN_GH }}
