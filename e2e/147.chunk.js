(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[147],{

/***/ "../../storybook/stories/area/21_with_time_timeslip.story.tsx":
/*!**************************************************************************************************************!*\
  !*** /home/runner/work/elastic-charts/elastic-charts/storybook/stories/area/21_with_time_timeslip.story.tsx ***!
  \**************************************************************************************************************/
/*! exports provided: Example */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Example\", function() { return Example; });\n/* harmony import */ var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @storybook/addon-knobs */ \"./mocks/@storybook/addon-knobs/index.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _elastic_charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @elastic/charts */ \"../../packages/charts/src/index.ts\");\n/* harmony import */ var _elastic_charts_src_utils_data_samples_test_dataset_kibana__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @elastic/charts/src/utils/data_samples/test_dataset_kibana */ \"../../packages/charts/src/utils/data_samples/test_dataset_kibana.ts\");\n/* harmony import */ var _use_base_theme__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../use_base_theme */ \"../../storybook/use_base_theme.ts\");\n/* harmony import */ var _utils_storybook__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/storybook */ \"../../storybook/stories/utils/storybook.ts\");\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\n\n\n\n\n\n\nconst fontFamily = '\"Atkinson Hyperlegible\"';\nconst tickLabelStyle = { fontSize: 11, fontFamily };\nconst axisTitleColor = 'rgb(112,112,112)';\nconst axisTitleFontSize = 15;\nconst dataInk = 'rgba(96, 146, 192, 1)';\nconst horizontalGridLineStyle = { stroke: 'black', strokeWidth: 0.15, opacity: 1 };\nconst tooltipDateFormatter = (d) => new Intl.DateTimeFormat('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n}).format(d);\nconst data = _elastic_charts_src_utils_data_samples_test_dataset_kibana__WEBPACK_IMPORTED_MODULE_3__[\"KIBANA_METRICS\"].metrics.kibana_os_load[0].data;\nconst t0 = data[0][0];\nconst t1 = data[data.length - 1][0];\nconst topAxisLabelFormat = (d) => `${new Intl.DateTimeFormat('en-US', { minute: 'numeric' }).format(d).padStart(2, '0')}â€²  `;\nconst Example = () => {\n    const minorGridLines = Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__[\"boolean\"])('Minor grid lines', true);\n    const horizontalAxisTitle = Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__[\"boolean\"])('Horizontal axis title', false);\n    const yAxisTitle = 'CPU utilization';\n    const timeZoom = Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__[\"number\"])('Time zoom', data.length, {\n        range: true,\n        min: 0,\n        max: data.length,\n        step: 1,\n    });\n    const timeStretch = Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__[\"number\"])('Stretch time', -0.4, {\n        range: true,\n        min: -20,\n        max: 18,\n        step: 0.2,\n    });\n    const timeShift = Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__[\"number\"])('Shift time', 0, {\n        range: true,\n        min: -10,\n        max: 10,\n        step: 0.05,\n    });\n    const binWidth = Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__[\"number\"])('Bin width in ms (0: none specifed)', 0, {\n        range: false,\n        min: 0,\n        max: 10 * 365 * 24 * 60 * 60 * 1000,\n        step: 1,\n    });\n    return (react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"Chart\"], null,\n        react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"Settings\"], { baseTheme: Object(_use_base_theme__WEBPACK_IMPORTED_MODULE_4__[\"useBaseTheme\"])(), theme: { axes: { tickLine: { visible: true } } }, xDomain: binWidth > 0\n                ? {\n                    min: NaN,\n                    max: NaN,\n                    minInterval: binWidth,\n                }\n                : undefined }),\n        react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"Axis\"], { id: \"x_minor\", position: Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__[\"boolean\"])('Top X axis', false) ? _elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"Position\"].Top : _elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"Position\"].Bottom, showOverlappingTicks: Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__[\"boolean\"])('showOverlappingTicks time axis', false), showOverlappingLabels: Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__[\"boolean\"])('showOverlappingLabels time axis', false), showGridLines: minorGridLines, style: {\n                axisLine: { stroke: dataInk },\n                tickLine: { size: 0.0001, padding: 4 },\n                tickLabel: {\n                    ...tickLabelStyle,\n                    alignment: { horizontal: _elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"Position\"].Left, vertical: _elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"Position\"].Bottom },\n                    padding: 0,\n                    offset: { x: 0, y: 0 },\n                },\n                axisTitle: { fontFamily, fill: axisTitleColor, fontSize: axisTitleFontSize },\n            }, tickFormat: tooltipDateFormatter, labelFormat: topAxisLabelFormat, title: \"time (1-minute measurements)\", timeAxisLayerCount: Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_0__[\"number\"])('layerCount', 3, { range: true, min: 0, max: 3, step: 1 }) }),\n        react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"Axis\"], { id: \"left\", title: yAxisTitle, position: _elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"Position\"].Left, showGridLines: true, ticks: 4, gridLine: horizontalGridLineStyle, style: {\n                tickLine: { ...horizontalGridLineStyle, size: 8, padding: 4 },\n                axisLine: { visible: false },\n                tickLabel: tickLabelStyle,\n                axisTitle: { visible: !horizontalAxisTitle, fontFamily, fill: axisTitleColor, fontSize: axisTitleFontSize },\n            }, tickFormat: (d) => `${Number(d).toFixed(0)}%` }),\n        react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement(_elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"AreaSeries\"], { id: \"Utilization\", xScaleType: _elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"ScaleType\"].Time, yScaleType: _elastic_charts__WEBPACK_IMPORTED_MODULE_2__[\"ScaleType\"].Linear, xAccessor: 0, yAccessors: [1], yNice: true, color: dataInk, areaSeriesStyle: { area: { opacity: 0.3 }, line: { opacity: 1 } }, data: data\n                .slice(0, timeZoom)\n                .map(([t, v]) => [t0 + (t - t0) * 4 * 2 ** timeStretch - (t1 - t0) * 2 ** timeStretch * timeShift, v]) })));\n};\n// storybook configuration\nExample.parameters = {\n    options: { selectedPanel: _utils_storybook__WEBPACK_IMPORTED_MODULE_5__[\"SB_SOURCE_PANEL\"] },\n};\n\n\n//# sourceURL=webpack:////home/runner/work/elastic-charts/elastic-charts/storybook/stories/area/21_with_time_timeslip.story.tsx?");

/***/ }),

/***/ "./mocks/@storybook/addon-knobs/index.ts":
/*!***********************************************!*\
  !*** ./mocks/@storybook/addon-knobs/index.ts ***!
  \***********************************************/
/*! exports provided: boolean, number, radios, color, select, text, array, optionsKnob, button */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"boolean\", function() { return boolean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"number\", function() { return number; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"radios\", function() { return radios; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"color\", function() { return color; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"select\", function() { return select; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"text\", function() { return text; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"array\", function() { return array; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"optionsKnob\", function() { return optionsKnob; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"button\", function() { return button; });\n/*\n * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n * or more contributor license agreements. Licensed under the Elastic License\n * 2.0 and the Server Side Public License, v 1; you may not use this file except\n * in compliance with, at your election, the Elastic License 2.0 or the Server\n * Side Public License, v 1.\n */\nfunction getParams() {\n    return new URL(window.location.toString()).searchParams;\n}\nfunction getKnobKey(name, groupId) {\n    return `knob-${name}${groupId !== undefined ? `_${groupId}` : ''}`;\n}\nfunction boolean(name, dftValue, groupId) {\n    const param = getParams().get(getKnobKey(name, groupId));\n    return param ? param === 'true' : dftValue;\n}\nfunction number(name, dftValue, options, groupId) {\n    var _a;\n    const params = getParams();\n    const key = getKnobKey(name, groupId);\n    return Number.parseFloat((_a = params.get(key)) !== null && _a !== void 0 ? _a : `${dftValue}`);\n}\nfunction radios(name, options, dftValue, groupId) {\n    return text(name, dftValue, groupId);\n}\nfunction color(name, dftValue, groupId) {\n    return text(name, dftValue, groupId);\n}\nfunction select(name, b, dftValue, groupId) {\n    return text(name, dftValue, groupId);\n}\nfunction text(name, dftValue, groupId) {\n    const value = getParams().get(getKnobKey(name, groupId));\n    // the # used for the color knob needs to be escaped on the URL and unescaped here\n    return value === null ? dftValue : unescape(value);\n}\nfunction array(name, dftValues, options, groupId) {\n    const params = getParams();\n    const values = [];\n    params.forEach((value, key) => {\n        if (key.startsWith(`${getKnobKey(name, groupId)}[`)) {\n            values.push(value);\n        }\n    });\n    if (values.length === 0) {\n        return dftValues;\n    }\n    return values;\n}\nfunction optionsKnob(name, values, dftValues, options, groupId) {\n    return array(name, dftValues, options, groupId);\n}\nfunction button() {\n    // NOP\n}\n\n\n//# sourceURL=webpack:///./mocks/@storybook/addon-knobs/index.ts?");

/***/ })

}]);